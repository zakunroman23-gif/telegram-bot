
from telethon import TelegramClient, events
import asyncio

print("üîê –í—Ö—ñ–¥–Ω—ñ –¥–∞–Ω—ñ –¥–ª—è –∑–∞–ø—É—Å–∫—É Telegram-–±–æ—Ç–∞:")
try:

api_id = int(input("api_id: "))
api_hash = input("api_hash: ")
chat_input = input("–°–ø–∏—Å–æ–∫ —á–∞—Ç—ñ–≤ (—á–µ—Ä–µ–∑ –∫–æ–º—É): ")
target_chats = [c.strip() for c in chat_input.split(',')]
comment_text = input("–¢–µ–∫—Å—Ç –∫–æ–º–µ–Ω—Ç–∞—Ä—è: ")

client = TelegramClient('user_session', api_id, api_hash)

async def comment_on_last_message():
    for chat in target_chats:
        try:
            messages = await client.get_messages(chat, limit=1)
            if messages:
                message = messages[0]
                # –©–æ–± –Ω–µ –¥—É–±–ª—é–≤–∞—Ç–∏, –ø–µ—Ä–µ–≤—ñ—Ä —á–∏ —Ç–∏ –≤–∂–µ –∫–æ–º–µ–Ω—Ç—É–≤–∞–≤:
                replies = await message.get_replies()
                me = await client.get_me()
                already_commented = any(reply.sender_id == me.id for reply in replies)
                if not already_commented:
                    await message.reply(comment_text)
                    print(f"‚úÖ –ü—Ä–æ–∫–æ–º–µ–Ω—Ç–æ–≤–∞–Ω–æ: {chat}")
                else:
                    print(f"‚è≠ –£–∂–µ –∫–æ–º–µ–Ω—Ç—É–≤–∞–≤ —É: {chat}")
        except Exception as e:
            print(f"‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –≤ {chat}: {e}")

with client:
    client.loop.run_until_complete(comment_on_last_message())
    

    print("\nüöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ. –û—á—ñ–∫—É—î–º–æ –Ω–æ–≤—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è...")
    client.start()
    client.run_until_disconnected()

except Exception as e:
    print(f"‚ùå –°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞: {e}")
    input("–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å Enter –¥–ª—è –≤–∏—Ö–æ–¥—É...")
